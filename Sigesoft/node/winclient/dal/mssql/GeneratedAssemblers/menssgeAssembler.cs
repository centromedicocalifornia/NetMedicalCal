//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:21:20
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="menssge"/> and <see cref="menssgeDto"/>.
    /// </summary>
    public static partial class menssgeAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="menssgeDto"/> converted from <see cref="menssge"/>.</param>
        static partial void OnDTO(this menssge entity, menssgeDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="menssge"/> converted from <see cref="menssgeDto"/>.</param>
        static partial void OnEntity(this menssgeDto dto, menssge entity);

        /// <summary>
        /// Converts this instance of <see cref="menssgeDto"/> to an instance of <see cref="menssge"/>.
        /// </summary>
        /// <param name="dto"><see cref="menssgeDto"/> to convert.</param>
        public static menssge ToEntity(this menssgeDto dto)
        {
            if (dto == null) return null;

            var entity = new menssge();

            entity.i_smsId = dto.i_smsId;
            entity.v_phoneNummber = dto.v_phoneNummber;
            entity.v_smsContent = dto.v_smsContent;
            entity.i_status = dto.i_status;
            entity.v_componentName = dto.v_componentName;
            entity.v_ProtocolName = dto.v_ProtocolName;
            entity.v_smsContent2 = dto.v_smsContent2;
            entity.v_NameClient = dto.v_NameClient;
            entity.v_user = dto.v_user;
            entity.v_pass = dto.v_pass;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="menssge"/> to an instance of <see cref="menssgeDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="menssge"/> to convert.</param>
        public static menssgeDto ToDTO(this menssge entity)
        {
            if (entity == null) return null;

            var dto = new menssgeDto();

            dto.i_smsId = entity.i_smsId;
            dto.v_phoneNummber = entity.v_phoneNummber;
            dto.v_smsContent = entity.v_smsContent;
            dto.i_status = entity.i_status;
            dto.v_componentName = entity.v_componentName;
            dto.v_ProtocolName = entity.v_ProtocolName;
            dto.v_smsContent2 = entity.v_smsContent2;
            dto.v_NameClient = entity.v_NameClient;
            dto.v_user = entity.v_user;
            dto.v_pass = entity.v_pass;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="menssgeDto"/> to an instance of <see cref="menssge"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<menssge> ToEntities(this IEnumerable<menssgeDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="menssge"/> to an instance of <see cref="menssgeDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<menssgeDto> ToDTOs(this IEnumerable<menssge> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
