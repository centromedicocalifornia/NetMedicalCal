//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:23:47
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="servicecomponentsdownload"/> and <see cref="servicecomponentsdownloadDto"/>.
    /// </summary>
    public static partial class servicecomponentsdownloadAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="servicecomponentsdownloadDto"/> converted from <see cref="servicecomponentsdownload"/>.</param>
        static partial void OnDTO(this servicecomponentsdownload entity, servicecomponentsdownloadDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="servicecomponentsdownload"/> converted from <see cref="servicecomponentsdownloadDto"/>.</param>
        static partial void OnEntity(this servicecomponentsdownloadDto dto, servicecomponentsdownload entity);

        /// <summary>
        /// Converts this instance of <see cref="servicecomponentsdownloadDto"/> to an instance of <see cref="servicecomponentsdownload"/>.
        /// </summary>
        /// <param name="dto"><see cref="servicecomponentsdownloadDto"/> to convert.</param>
        public static servicecomponentsdownload ToEntity(this servicecomponentsdownloadDto dto)
        {
            if (dto == null) return null;

            var entity = new servicecomponentsdownload();

            entity.i_ServiceComponetsDownloadId = dto.i_ServiceComponetsDownloadId;
            entity.v_ServiceId = dto.v_ServiceId;
            entity.v_ComponentName = dto.v_ComponentName;
            entity.i_Status = dto.i_Status;
            entity.v_ManagerAuthorizeId = dto.v_ManagerAuthorizeId;
            entity.v_paymentType = dto.v_paymentType;
            entity.v_TypeDoc = dto.v_TypeDoc;
            entity.v_NroDoc = dto.v_NroDoc;
            entity.i_amount = dto.i_amount;
            entity.v_Reference = dto.v_Reference;
            entity.v_IdInsert = dto.v_IdInsert;
            entity.d_dateInsert = dto.d_dateInsert;
            entity.v_idupdate = dto.v_idupdate;
            entity.d_update = dto.d_update;
            entity.d_RequiredUser = dto.d_RequiredUser;
            entity.v_FileNameDni = dto.v_FileNameDni;
            entity.b_FileContentDni = dto.b_FileContentDni;
            entity.v_FileNameDoc = dto.v_FileNameDoc;
            entity.b_FileContentDoc = dto.b_FileContentDoc;
            entity.v_BaucherName = dto.v_BaucherName;
            entity.b_BaucherContent = dto.b_BaucherContent;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="servicecomponentsdownload"/> to an instance of <see cref="servicecomponentsdownloadDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="servicecomponentsdownload"/> to convert.</param>
        public static servicecomponentsdownloadDto ToDTO(this servicecomponentsdownload entity)
        {
            if (entity == null) return null;

            var dto = new servicecomponentsdownloadDto();

            dto.i_ServiceComponetsDownloadId = entity.i_ServiceComponetsDownloadId;
            dto.v_ServiceId = entity.v_ServiceId;
            dto.v_ComponentName = entity.v_ComponentName;
            dto.i_Status = entity.i_Status;
            dto.v_ManagerAuthorizeId = entity.v_ManagerAuthorizeId;
            dto.v_paymentType = entity.v_paymentType;
            dto.v_TypeDoc = entity.v_TypeDoc;
            dto.v_NroDoc = entity.v_NroDoc;
            dto.i_amount = entity.i_amount;
            dto.v_Reference = entity.v_Reference;
            dto.v_IdInsert = entity.v_IdInsert;
            dto.d_dateInsert = entity.d_dateInsert;
            dto.v_idupdate = entity.v_idupdate;
            dto.d_update = entity.d_update;
            dto.d_RequiredUser = entity.d_RequiredUser;
            dto.v_FileNameDni = entity.v_FileNameDni;
            dto.b_FileContentDni = entity.b_FileContentDni;
            dto.v_FileNameDoc = entity.v_FileNameDoc;
            dto.b_FileContentDoc = entity.b_FileContentDoc;
            dto.v_BaucherName = entity.v_BaucherName;
            dto.b_BaucherContent = entity.b_BaucherContent;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="servicecomponentsdownloadDto"/> to an instance of <see cref="servicecomponentsdownload"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<servicecomponentsdownload> ToEntities(this IEnumerable<servicecomponentsdownloadDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="servicecomponentsdownload"/> to an instance of <see cref="servicecomponentsdownloadDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<servicecomponentsdownloadDto> ToDTOs(this IEnumerable<servicecomponentsdownload> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
