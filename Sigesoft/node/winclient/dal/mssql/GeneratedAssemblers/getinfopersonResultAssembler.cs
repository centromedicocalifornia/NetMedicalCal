//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:16:32
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getinfopersonResult"/> and <see cref="getinfopersonResultDto"/>.
    /// </summary>
    public static partial class getinfopersonResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getinfopersonResultDto"/> converted from <see cref="getinfopersonResult"/>.</param>
        static partial void OnDTO(this getinfopersonResult entity, getinfopersonResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getinfopersonResult"/> converted from <see cref="getinfopersonResultDto"/>.</param>
        static partial void OnEntity(this getinfopersonResultDto dto, getinfopersonResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getinfopersonResultDto"/> to an instance of <see cref="getinfopersonResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getinfopersonResultDto"/> to convert.</param>
        public static getinfopersonResult ToEntity(this getinfopersonResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getinfopersonResult();

            entity.name = dto.name;
            entity.v_PersonId = dto.v_PersonId;
            entity.v_TelephoneNumber = dto.v_TelephoneNumber;
            entity.v_Mail = dto.v_Mail;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getinfopersonResult"/> to an instance of <see cref="getinfopersonResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getinfopersonResult"/> to convert.</param>
        public static getinfopersonResultDto ToDTO(this getinfopersonResult entity)
        {
            if (entity == null) return null;

            var dto = new getinfopersonResultDto();

            dto.name = entity.name;
            dto.v_PersonId = entity.v_PersonId;
            dto.v_TelephoneNumber = entity.v_TelephoneNumber;
            dto.v_Mail = entity.v_Mail;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getinfopersonResultDto"/> to an instance of <see cref="getinfopersonResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getinfopersonResult> ToEntities(this IEnumerable<getinfopersonResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getinfopersonResult"/> to an instance of <see cref="getinfopersonResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getinfopersonResultDto> ToDTOs(this IEnumerable<getinfopersonResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
