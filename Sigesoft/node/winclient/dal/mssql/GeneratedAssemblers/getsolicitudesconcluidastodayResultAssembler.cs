//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/04 - 17:52:28
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getsolicitudesconcluidastodayResult"/> and <see cref="getsolicitudesconcluidastodayResultDto"/>.
    /// </summary>
    public static partial class getsolicitudesconcluidastodayResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getsolicitudesconcluidastodayResultDto"/> converted from <see cref="getsolicitudesconcluidastodayResult"/>.</param>
        static partial void OnDTO(this getsolicitudesconcluidastodayResult entity, getsolicitudesconcluidastodayResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getsolicitudesconcluidastodayResult"/> converted from <see cref="getsolicitudesconcluidastodayResultDto"/>.</param>
        static partial void OnEntity(this getsolicitudesconcluidastodayResultDto dto, getsolicitudesconcluidastodayResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getsolicitudesconcluidastodayResultDto"/> to an instance of <see cref="getsolicitudesconcluidastodayResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getsolicitudesconcluidastodayResultDto"/> to convert.</param>
        public static getsolicitudesconcluidastodayResult ToEntity(this getsolicitudesconcluidastodayResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getsolicitudesconcluidastodayResult();

            entity.solicitudesConcluidasToDay = dto.solicitudesConcluidasToDay;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getsolicitudesconcluidastodayResult"/> to an instance of <see cref="getsolicitudesconcluidastodayResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getsolicitudesconcluidastodayResult"/> to convert.</param>
        public static getsolicitudesconcluidastodayResultDto ToDTO(this getsolicitudesconcluidastodayResult entity)
        {
            if (entity == null) return null;

            var dto = new getsolicitudesconcluidastodayResultDto();

            dto.solicitudesConcluidasToDay = entity.solicitudesConcluidasToDay;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getsolicitudesconcluidastodayResultDto"/> to an instance of <see cref="getsolicitudesconcluidastodayResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getsolicitudesconcluidastodayResult> ToEntities(this IEnumerable<getsolicitudesconcluidastodayResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getsolicitudesconcluidastodayResult"/> to an instance of <see cref="getsolicitudesconcluidastodayResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getsolicitudesconcluidastodayResultDto> ToDTOs(this IEnumerable<getsolicitudesconcluidastodayResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
