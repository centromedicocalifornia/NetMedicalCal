//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:17:06
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getpurchaseefectivoandonlineResult"/> and <see cref="getpurchaseefectivoandonlineResultDto"/>.
    /// </summary>
    public static partial class getpurchaseefectivoandonlineResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getpurchaseefectivoandonlineResultDto"/> converted from <see cref="getpurchaseefectivoandonlineResult"/>.</param>
        static partial void OnDTO(this getpurchaseefectivoandonlineResult entity, getpurchaseefectivoandonlineResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getpurchaseefectivoandonlineResult"/> converted from <see cref="getpurchaseefectivoandonlineResultDto"/>.</param>
        static partial void OnEntity(this getpurchaseefectivoandonlineResultDto dto, getpurchaseefectivoandonlineResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getpurchaseefectivoandonlineResultDto"/> to an instance of <see cref="getpurchaseefectivoandonlineResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getpurchaseefectivoandonlineResultDto"/> to convert.</param>
        public static getpurchaseefectivoandonlineResult ToEntity(this getpurchaseefectivoandonlineResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getpurchaseefectivoandonlineResult();

            entity.pagoOnline = dto.pagoOnline;
            entity.pagoEfectivo = dto.pagoEfectivo;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getpurchaseefectivoandonlineResult"/> to an instance of <see cref="getpurchaseefectivoandonlineResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getpurchaseefectivoandonlineResult"/> to convert.</param>
        public static getpurchaseefectivoandonlineResultDto ToDTO(this getpurchaseefectivoandonlineResult entity)
        {
            if (entity == null) return null;

            var dto = new getpurchaseefectivoandonlineResultDto();

            dto.pagoOnline = entity.pagoOnline;
            dto.pagoEfectivo = entity.pagoEfectivo;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getpurchaseefectivoandonlineResultDto"/> to an instance of <see cref="getpurchaseefectivoandonlineResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getpurchaseefectivoandonlineResult> ToEntities(this IEnumerable<getpurchaseefectivoandonlineResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getpurchaseefectivoandonlineResult"/> to an instance of <see cref="getpurchaseefectivoandonlineResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getpurchaseefectivoandonlineResultDto> ToDTOs(this IEnumerable<getpurchaseefectivoandonlineResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
