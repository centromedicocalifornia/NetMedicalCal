//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/04 - 17:56:27
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="receipheader"/> and <see cref="receipheaderDto"/>.
    /// </summary>
    public static partial class receipheaderAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="receipheaderDto"/> converted from <see cref="receipheader"/>.</param>
        static partial void OnDTO(this receipheader entity, receipheaderDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="receipheader"/> converted from <see cref="receipheaderDto"/>.</param>
        static partial void OnEntity(this receipheaderDto dto, receipheader entity);

        /// <summary>
        /// Converts this instance of <see cref="receipheaderDto"/> to an instance of <see cref="receipheader"/>.
        /// </summary>
        /// <param name="dto"><see cref="receipheaderDto"/> to convert.</param>
        public static receipheader ToEntity(this receipheaderDto dto)
        {
            if (dto == null) return null;

            var entity = new receipheader();

            entity.v_ReceipId = dto.v_ReceipId;
            entity.v_ServiceId = dto.v_ServiceId;
            entity.i_MedicoId = dto.i_MedicoId;
            entity.v_MedicoName = dto.v_MedicoName;
            entity.d_Total = dto.d_Total;
            entity.i_IsDeleted = dto.i_IsDeleted;
            entity.i_InsertUserId = dto.i_InsertUserId;
            entity.d_InsertDate = dto.d_InsertDate;
            entity.i_UpdateUserId = dto.i_UpdateUserId;
            entity.d_UpdateDate = dto.d_UpdateDate;
            entity.v_diaxrepositoryId = dto.v_diaxrepositoryId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="receipheader"/> to an instance of <see cref="receipheaderDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="receipheader"/> to convert.</param>
        public static receipheaderDto ToDTO(this receipheader entity)
        {
            if (entity == null) return null;

            var dto = new receipheaderDto();

            dto.v_ReceipId = entity.v_ReceipId;
            dto.v_ServiceId = entity.v_ServiceId;
            dto.i_MedicoId = entity.i_MedicoId;
            dto.v_MedicoName = entity.v_MedicoName;
            dto.d_Total = entity.d_Total;
            dto.i_IsDeleted = entity.i_IsDeleted;
            dto.i_InsertUserId = entity.i_InsertUserId;
            dto.d_InsertDate = entity.d_InsertDate;
            dto.i_UpdateUserId = entity.i_UpdateUserId;
            dto.d_UpdateDate = entity.d_UpdateDate;
            dto.v_diaxrepositoryId = entity.v_diaxrepositoryId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="receipheaderDto"/> to an instance of <see cref="receipheader"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<receipheader> ToEntities(this IEnumerable<receipheaderDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="receipheader"/> to an instance of <see cref="receipheaderDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<receipheaderDto> ToDTOs(this IEnumerable<receipheader> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
