//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2023/03/31 - 10:34:47
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getservicesResult"/> and <see cref="getservicesResultDto"/>.
    /// </summary>
    public static partial class getservicesResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getservicesResultDto"/> converted from <see cref="getservicesResult"/>.</param>
        static partial void OnDTO(this getservicesResult entity, getservicesResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getservicesResult"/> converted from <see cref="getservicesResultDto"/>.</param>
        static partial void OnEntity(this getservicesResultDto dto, getservicesResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getservicesResultDto"/> to an instance of <see cref="getservicesResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getservicesResultDto"/> to convert.</param>
        public static getservicesResult ToEntity(this getservicesResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getservicesResult();

            entity.serviceId = dto.serviceId;
            entity.v_Name = dto.v_Name;
            entity.d_ServiceDate = dto.d_ServiceDate;
            entity.Aptitud = dto.Aptitud;
            entity.Estado = dto.Estado;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getservicesResult"/> to an instance of <see cref="getservicesResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getservicesResult"/> to convert.</param>
        public static getservicesResultDto ToDTO(this getservicesResult entity)
        {
            if (entity == null) return null;

            var dto = new getservicesResultDto();

            dto.serviceId = entity.serviceId;
            dto.v_Name = entity.v_Name;
            dto.d_ServiceDate = entity.d_ServiceDate;
            dto.Aptitud = entity.Aptitud;
            dto.Estado = entity.Estado;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getservicesResultDto"/> to an instance of <see cref="getservicesResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getservicesResult> ToEntities(this IEnumerable<getservicesResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getservicesResult"/> to an instance of <see cref="getservicesResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getservicesResultDto> ToDTOs(this IEnumerable<getservicesResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
