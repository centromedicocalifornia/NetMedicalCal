//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/04 - 17:52:39
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getticketreportResult"/> and <see cref="getticketreportResultDto"/>.
    /// </summary>
    public static partial class getticketreportResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getticketreportResultDto"/> converted from <see cref="getticketreportResult"/>.</param>
        static partial void OnDTO(this getticketreportResult entity, getticketreportResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getticketreportResult"/> converted from <see cref="getticketreportResultDto"/>.</param>
        static partial void OnEntity(this getticketreportResultDto dto, getticketreportResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getticketreportResultDto"/> to an instance of <see cref="getticketreportResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getticketreportResultDto"/> to convert.</param>
        public static getticketreportResult ToEntity(this getticketreportResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getticketreportResult();

            entity.v_ComponentId = dto.v_ComponentId;
            entity.v_ComponentName = dto.v_ComponentName;
            entity.i_ServiceComponentStatusId = dto.i_ServiceComponentStatusId;
            entity.v_ServiceComponentStatusName = dto.v_ServiceComponentStatusName;
            entity.d_StartDate = dto.d_StartDate;
            entity.d_EndDate = dto.d_EndDate;
            entity.i_QueueStatusId = dto.i_QueueStatusId;
            entity.v_QueueStatusName = dto.v_QueueStatusName;
            entity.ServiceStatusId = dto.ServiceStatusId;
            entity.v_Motive = dto.v_Motive;
            entity.i_CategoryId = dto.i_CategoryId;
            entity.v_CategoryName = dto.v_CategoryName;
            entity.v_ServiceId = dto.v_ServiceId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getticketreportResult"/> to an instance of <see cref="getticketreportResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getticketreportResult"/> to convert.</param>
        public static getticketreportResultDto ToDTO(this getticketreportResult entity)
        {
            if (entity == null) return null;

            var dto = new getticketreportResultDto();

            dto.v_ComponentId = entity.v_ComponentId;
            dto.v_ComponentName = entity.v_ComponentName;
            dto.i_ServiceComponentStatusId = entity.i_ServiceComponentStatusId;
            dto.v_ServiceComponentStatusName = entity.v_ServiceComponentStatusName;
            dto.d_StartDate = entity.d_StartDate;
            dto.d_EndDate = entity.d_EndDate;
            dto.i_QueueStatusId = entity.i_QueueStatusId;
            dto.v_QueueStatusName = entity.v_QueueStatusName;
            dto.ServiceStatusId = entity.ServiceStatusId;
            dto.v_Motive = entity.v_Motive;
            dto.i_CategoryId = entity.i_CategoryId;
            dto.v_CategoryName = entity.v_CategoryName;
            dto.v_ServiceId = entity.v_ServiceId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getticketreportResultDto"/> to an instance of <see cref="getticketreportResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getticketreportResult> ToEntities(this IEnumerable<getticketreportResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getticketreportResult"/> to an instance of <see cref="getticketreportResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getticketreportResultDto> ToDTOs(this IEnumerable<getticketreportResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
