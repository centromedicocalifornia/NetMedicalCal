//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:20:03
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="cardiologia"/> and <see cref="cardiologiaDto"/>.
    /// </summary>
    public static partial class cardiologiaAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="cardiologiaDto"/> converted from <see cref="cardiologia"/>.</param>
        static partial void OnDTO(this cardiologia entity, cardiologiaDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="cardiologia"/> converted from <see cref="cardiologiaDto"/>.</param>
        static partial void OnEntity(this cardiologiaDto dto, cardiologia entity);

        /// <summary>
        /// Converts this instance of <see cref="cardiologiaDto"/> to an instance of <see cref="cardiologia"/>.
        /// </summary>
        /// <param name="dto"><see cref="cardiologiaDto"/> to convert.</param>
        public static cardiologia ToEntity(this cardiologiaDto dto)
        {
            if (dto == null) return null;

            var entity = new cardiologia();

            entity.v_CardiologiaId = dto.v_CardiologiaId;
            entity.v_ServicioId = dto.v_ServicioId;
            entity.v_RitmoCardiaco = dto.v_RitmoCardiaco;
            entity.v_FrecuenciaCardiaca = dto.v_FrecuenciaCardiaca;
            entity.v_EjeCardiaco = dto.v_EjeCardiaco;
            entity.v_IntervaloPR = dto.v_IntervaloPR;
            entity.v_ComplejoQRS = dto.v_ComplejoQRS;
            entity.v_IntervaloQTC = dto.v_IntervaloQTC;
            entity.v_ConclusionesCardiologia = dto.v_ConclusionesCardiologia;
            entity.d_FechaInsercion = dto.d_FechaInsercion;
            entity.i_UsuarioInsertaId = dto.i_UsuarioInsertaId;
            entity.d_FechaActualizacion = dto.d_FechaActualizacion;
            entity.i_UsuarioActualizaId = dto.i_UsuarioActualizaId;
            entity.i_EsEliminado = dto.i_EsEliminado;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="cardiologia"/> to an instance of <see cref="cardiologiaDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="cardiologia"/> to convert.</param>
        public static cardiologiaDto ToDTO(this cardiologia entity)
        {
            if (entity == null) return null;

            var dto = new cardiologiaDto();

            dto.v_CardiologiaId = entity.v_CardiologiaId;
            dto.v_ServicioId = entity.v_ServicioId;
            dto.v_RitmoCardiaco = entity.v_RitmoCardiaco;
            dto.v_FrecuenciaCardiaca = entity.v_FrecuenciaCardiaca;
            dto.v_EjeCardiaco = entity.v_EjeCardiaco;
            dto.v_IntervaloPR = entity.v_IntervaloPR;
            dto.v_ComplejoQRS = entity.v_ComplejoQRS;
            dto.v_IntervaloQTC = entity.v_IntervaloQTC;
            dto.v_ConclusionesCardiologia = entity.v_ConclusionesCardiologia;
            dto.d_FechaInsercion = entity.d_FechaInsercion;
            dto.i_UsuarioInsertaId = entity.i_UsuarioInsertaId;
            dto.d_FechaActualizacion = entity.d_FechaActualizacion;
            dto.i_UsuarioActualizaId = entity.i_UsuarioActualizaId;
            dto.i_EsEliminado = entity.i_EsEliminado;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="cardiologiaDto"/> to an instance of <see cref="cardiologia"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<cardiologia> ToEntities(this IEnumerable<cardiologiaDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="cardiologia"/> to an instance of <see cref="cardiologiaDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<cardiologiaDto> ToDTOs(this IEnumerable<cardiologia> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
