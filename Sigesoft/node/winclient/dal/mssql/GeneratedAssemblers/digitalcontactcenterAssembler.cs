//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2023/03/31 - 10:37:38
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="digitalcontactcenter"/> and <see cref="digitalcontactcenterDto"/>.
    /// </summary>
    public static partial class digitalcontactcenterAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="digitalcontactcenterDto"/> converted from <see cref="digitalcontactcenter"/>.</param>
        static partial void OnDTO(this digitalcontactcenter entity, digitalcontactcenterDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="digitalcontactcenter"/> converted from <see cref="digitalcontactcenterDto"/>.</param>
        static partial void OnEntity(this digitalcontactcenterDto dto, digitalcontactcenter entity);

        /// <summary>
        /// Converts this instance of <see cref="digitalcontactcenterDto"/> to an instance of <see cref="digitalcontactcenter"/>.
        /// </summary>
        /// <param name="dto"><see cref="digitalcontactcenterDto"/> to convert.</param>
        public static digitalcontactcenter ToEntity(this digitalcontactcenterDto dto)
        {
            if (dto == null) return null;

            var entity = new digitalcontactcenter();

            entity.v_DigitalContactCenterId = dto.v_DigitalContactCenterId;
            entity.v_PersonId = dto.v_PersonId;
            entity.i_MedioMkt = dto.i_MedioMkt;
            entity.d_FechaCita = dto.d_FechaCita;
            entity.v_ProtocolId = dto.v_ProtocolId;
            entity.v_MotivoConsulta = dto.v_MotivoConsulta;
            entity.i_MetodoPago = dto.i_MetodoPago;
            entity.i_EstadoAtencion = dto.i_EstadoAtencion;
            entity.v_ServiceId = dto.v_ServiceId;
            entity.v_MotivoEliminación = dto.v_MotivoEliminación;
            entity.i_IsDeleted = dto.i_IsDeleted;
            entity.i_InsertUserId = dto.i_InsertUserId;
            entity.d_InsertDate = dto.d_InsertDate;
            entity.i_UpdateUserId = dto.i_UpdateUserId;
            entity.d_UpdateDate = dto.d_UpdateDate;
            entity.b_ComprobanteDep = dto.b_ComprobanteDep;
            entity.v_DCCIdReAgenda = dto.v_DCCIdReAgenda;
            entity.v_Comentarios = dto.v_Comentarios;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="digitalcontactcenter"/> to an instance of <see cref="digitalcontactcenterDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="digitalcontactcenter"/> to convert.</param>
        public static digitalcontactcenterDto ToDTO(this digitalcontactcenter entity)
        {
            if (entity == null) return null;

            var dto = new digitalcontactcenterDto();

            dto.v_DigitalContactCenterId = entity.v_DigitalContactCenterId;
            dto.v_PersonId = entity.v_PersonId;
            dto.i_MedioMkt = entity.i_MedioMkt;
            dto.d_FechaCita = entity.d_FechaCita;
            dto.v_ProtocolId = entity.v_ProtocolId;
            dto.v_MotivoConsulta = entity.v_MotivoConsulta;
            dto.i_MetodoPago = entity.i_MetodoPago;
            dto.i_EstadoAtencion = entity.i_EstadoAtencion;
            dto.v_ServiceId = entity.v_ServiceId;
            dto.v_MotivoEliminación = entity.v_MotivoEliminación;
            dto.i_IsDeleted = entity.i_IsDeleted;
            dto.i_InsertUserId = entity.i_InsertUserId;
            dto.d_InsertDate = entity.d_InsertDate;
            dto.i_UpdateUserId = entity.i_UpdateUserId;
            dto.d_UpdateDate = entity.d_UpdateDate;
            dto.b_ComprobanteDep = entity.b_ComprobanteDep;
            dto.v_DCCIdReAgenda = entity.v_DCCIdReAgenda;
            dto.v_Comentarios = entity.v_Comentarios;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="digitalcontactcenterDto"/> to an instance of <see cref="digitalcontactcenter"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<digitalcontactcenter> ToEntities(this IEnumerable<digitalcontactcenterDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="digitalcontactcenter"/> to an instance of <see cref="digitalcontactcenterDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<digitalcontactcenterDto> ToDTOs(this IEnumerable<digitalcontactcenter> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
