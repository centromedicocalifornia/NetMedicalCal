//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:18:03
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getserviceinformationResult"/> and <see cref="getserviceinformationResultDto"/>.
    /// </summary>
    public static partial class getserviceinformationResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getserviceinformationResultDto"/> converted from <see cref="getserviceinformationResult"/>.</param>
        static partial void OnDTO(this getserviceinformationResult entity, getserviceinformationResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getserviceinformationResult"/> converted from <see cref="getserviceinformationResultDto"/>.</param>
        static partial void OnEntity(this getserviceinformationResultDto dto, getserviceinformationResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getserviceinformationResultDto"/> to an instance of <see cref="getserviceinformationResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getserviceinformationResultDto"/> to convert.</param>
        public static getserviceinformationResult ToEntity(this getserviceinformationResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getserviceinformationResult();

            entity.v_ServiceId = dto.v_ServiceId;
            entity.v_Name = dto.v_Name;
            entity.v_CustomerOrganizationId = dto.v_CustomerOrganizationId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getserviceinformationResult"/> to an instance of <see cref="getserviceinformationResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getserviceinformationResult"/> to convert.</param>
        public static getserviceinformationResultDto ToDTO(this getserviceinformationResult entity)
        {
            if (entity == null) return null;

            var dto = new getserviceinformationResultDto();

            dto.v_ServiceId = entity.v_ServiceId;
            dto.v_Name = entity.v_Name;
            dto.v_CustomerOrganizationId = entity.v_CustomerOrganizationId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getserviceinformationResultDto"/> to an instance of <see cref="getserviceinformationResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getserviceinformationResult> ToEntities(this IEnumerable<getserviceinformationResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getserviceinformationResult"/> to an instance of <see cref="getserviceinformationResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getserviceinformationResultDto> ToDTOs(this IEnumerable<getserviceinformationResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
