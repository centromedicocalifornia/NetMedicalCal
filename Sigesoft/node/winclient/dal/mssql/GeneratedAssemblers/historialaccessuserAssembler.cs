//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2023/03/31 - 10:38:04
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="historialaccessuser"/> and <see cref="historialaccessuserDto"/>.
    /// </summary>
    public static partial class historialaccessuserAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="historialaccessuserDto"/> converted from <see cref="historialaccessuser"/>.</param>
        static partial void OnDTO(this historialaccessuser entity, historialaccessuserDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="historialaccessuser"/> converted from <see cref="historialaccessuserDto"/>.</param>
        static partial void OnEntity(this historialaccessuserDto dto, historialaccessuser entity);

        /// <summary>
        /// Converts this instance of <see cref="historialaccessuserDto"/> to an instance of <see cref="historialaccessuser"/>.
        /// </summary>
        /// <param name="dto"><see cref="historialaccessuserDto"/> to convert.</param>
        public static historialaccessuser ToEntity(this historialaccessuserDto dto)
        {
            if (dto == null) return null;

            var entity = new historialaccessuser();

            entity.i_HistorialAccessUser = dto.i_HistorialAccessUser;
            entity.v_PersonId = dto.v_PersonId;
            entity.d_dateAccess = dto.d_dateAccess;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="historialaccessuser"/> to an instance of <see cref="historialaccessuserDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="historialaccessuser"/> to convert.</param>
        public static historialaccessuserDto ToDTO(this historialaccessuser entity)
        {
            if (entity == null) return null;

            var dto = new historialaccessuserDto();

            dto.i_HistorialAccessUser = entity.i_HistorialAccessUser;
            dto.v_PersonId = entity.v_PersonId;
            dto.d_dateAccess = entity.d_dateAccess;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="historialaccessuserDto"/> to an instance of <see cref="historialaccessuser"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<historialaccessuser> ToEntities(this IEnumerable<historialaccessuserDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="historialaccessuser"/> to an instance of <see cref="historialaccessuserDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<historialaccessuserDto> ToDTOs(this IEnumerable<historialaccessuser> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
