//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/04 - 17:49:38
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="gethistoryreport_spResult"/> and <see cref="gethistoryreport_spResultDto"/>.
    /// </summary>
    public static partial class gethistoryreport_spResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="gethistoryreport_spResultDto"/> converted from <see cref="gethistoryreport_spResult"/>.</param>
        static partial void OnDTO(this gethistoryreport_spResult entity, gethistoryreport_spResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="gethistoryreport_spResult"/> converted from <see cref="gethistoryreport_spResultDto"/>.</param>
        static partial void OnEntity(this gethistoryreport_spResultDto dto, gethistoryreport_spResult entity);

        /// <summary>
        /// Converts this instance of <see cref="gethistoryreport_spResultDto"/> to an instance of <see cref="gethistoryreport_spResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="gethistoryreport_spResultDto"/> to convert.</param>
        public static gethistoryreport_spResult ToEntity(this gethistoryreport_spResultDto dto)
        {
            if (dto == null) return null;

            var entity = new gethistoryreport_spResult();

            entity.v_HistoryId = dto.v_HistoryId;
            entity.d_StartDate = dto.d_StartDate;
            entity.d_EndDate = dto.d_EndDate;
            entity.v_Organization = dto.v_Organization;
            entity.v_TypeActivity = dto.v_TypeActivity;
            entity.i_GeografixcaHeight = dto.i_GeografixcaHeight;
            entity.v_workstation = dto.v_workstation;
            entity.d_CreationDate = dto.d_CreationDate;
            entity.d_UpdateDate = dto.d_UpdateDate;
            entity.b_FingerPrintImage = dto.b_FingerPrintImage;
            entity.b_RubricImage = dto.b_RubricImage;
            entity.t_RubricImageText = dto.t_RubricImageText;
            entity.v_TypeOperationName = dto.v_TypeOperationName;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="gethistoryreport_spResult"/> to an instance of <see cref="gethistoryreport_spResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="gethistoryreport_spResult"/> to convert.</param>
        public static gethistoryreport_spResultDto ToDTO(this gethistoryreport_spResult entity)
        {
            if (entity == null) return null;

            var dto = new gethistoryreport_spResultDto();

            dto.v_HistoryId = entity.v_HistoryId;
            dto.d_StartDate = entity.d_StartDate;
            dto.d_EndDate = entity.d_EndDate;
            dto.v_Organization = entity.v_Organization;
            dto.v_TypeActivity = entity.v_TypeActivity;
            dto.i_GeografixcaHeight = entity.i_GeografixcaHeight;
            dto.v_workstation = entity.v_workstation;
            dto.d_CreationDate = entity.d_CreationDate;
            dto.d_UpdateDate = entity.d_UpdateDate;
            dto.b_FingerPrintImage = entity.b_FingerPrintImage;
            dto.b_RubricImage = entity.b_RubricImage;
            dto.t_RubricImageText = entity.t_RubricImageText;
            dto.v_TypeOperationName = entity.v_TypeOperationName;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="gethistoryreport_spResultDto"/> to an instance of <see cref="gethistoryreport_spResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<gethistoryreport_spResult> ToEntities(this IEnumerable<gethistoryreport_spResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="gethistoryreport_spResult"/> to an instance of <see cref="gethistoryreport_spResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<gethistoryreport_spResultDto> ToDTOs(this IEnumerable<gethistoryreport_spResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
