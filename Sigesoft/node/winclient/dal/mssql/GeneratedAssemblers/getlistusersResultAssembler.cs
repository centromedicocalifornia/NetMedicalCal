//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:16:41
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getlistusersResult"/> and <see cref="getlistusersResultDto"/>.
    /// </summary>
    public static partial class getlistusersResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getlistusersResultDto"/> converted from <see cref="getlistusersResult"/>.</param>
        static partial void OnDTO(this getlistusersResult entity, getlistusersResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getlistusersResult"/> converted from <see cref="getlistusersResultDto"/>.</param>
        static partial void OnEntity(this getlistusersResultDto dto, getlistusersResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getlistusersResultDto"/> to an instance of <see cref="getlistusersResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getlistusersResultDto"/> to convert.</param>
        public static getlistusersResult ToEntity(this getlistusersResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getlistusersResult();

            entity.v_DocNumber = dto.v_DocNumber;
            entity.v_PersonId = dto.v_PersonId;
            entity.name = dto.name;
            entity.v_UserName = dto.v_UserName;
            entity.i_SystemUserTypeId = dto.i_SystemUserTypeId;
            entity.i_IsDeleted = dto.i_IsDeleted;
            entity.i_LoginFrecuency = dto.i_LoginFrecuency;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getlistusersResult"/> to an instance of <see cref="getlistusersResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getlistusersResult"/> to convert.</param>
        public static getlistusersResultDto ToDTO(this getlistusersResult entity)
        {
            if (entity == null) return null;

            var dto = new getlistusersResultDto();

            dto.v_DocNumber = entity.v_DocNumber;
            dto.v_PersonId = entity.v_PersonId;
            dto.name = entity.name;
            dto.v_UserName = entity.v_UserName;
            dto.i_SystemUserTypeId = entity.i_SystemUserTypeId;
            dto.i_IsDeleted = entity.i_IsDeleted;
            dto.i_LoginFrecuency = entity.i_LoginFrecuency;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getlistusersResultDto"/> to an instance of <see cref="getlistusersResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getlistusersResult> ToEntities(this IEnumerable<getlistusersResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getlistusersResult"/> to an instance of <see cref="getlistusersResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getlistusersResultDto> ToDTOs(this IEnumerable<getlistusersResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
