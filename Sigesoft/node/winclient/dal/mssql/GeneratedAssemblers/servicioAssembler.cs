//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/06 - 17:23:57
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="servicio"/> and <see cref="servicioDto"/>.
    /// </summary>
    public static partial class servicioAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="servicioDto"/> converted from <see cref="servicio"/>.</param>
        static partial void OnDTO(this servicio entity, servicioDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="servicio"/> converted from <see cref="servicioDto"/>.</param>
        static partial void OnEntity(this servicioDto dto, servicio entity);

        /// <summary>
        /// Converts this instance of <see cref="servicioDto"/> to an instance of <see cref="servicio"/>.
        /// </summary>
        /// <param name="dto"><see cref="servicioDto"/> to convert.</param>
        public static servicio ToEntity(this servicioDto dto)
        {
            if (dto == null) return null;

            var entity = new servicio();

            entity.v_ServicioId = dto.v_ServicioId;
            entity.v_PersonaId = dto.v_PersonaId;
            entity.i_TipoExamen = dto.i_TipoExamen;
            entity.v_NombreExamen = dto.v_NombreExamen;
            entity.d_FechaExamen = dto.d_FechaExamen;
            entity.v_Ocupacion = dto.v_Ocupacion;
            entity.v_EmpresaTrabajo = dto.v_EmpresaTrabajo;
            entity.v_Contrata = dto.v_Contrata;
            entity.v_ClinicaExamen = dto.v_ClinicaExamen;
            entity.v_Diagnosticos = dto.v_Diagnosticos;
            entity.v_Recomendaciones = dto.v_Recomendaciones;
            entity.v_Restricciones = dto.v_Restricciones;
            entity.i_Aptitud = dto.i_Aptitud;
            entity.v_MotivoObservacion = dto.v_MotivoObservacion;
            entity.d_FechaVigencia = dto.d_FechaVigencia;
            entity.d_FechaInsercion = dto.d_FechaInsercion;
            entity.i_UsuarioInsertaId = dto.i_UsuarioInsertaId;
            entity.d_FechaActualizacion = dto.d_FechaActualizacion;
            entity.i_UsuarioActualizaId = dto.i_UsuarioActualizaId;
            entity.i_EsEliminado = dto.i_EsEliminado;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="servicio"/> to an instance of <see cref="servicioDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="servicio"/> to convert.</param>
        public static servicioDto ToDTO(this servicio entity)
        {
            if (entity == null) return null;

            var dto = new servicioDto();

            dto.v_ServicioId = entity.v_ServicioId;
            dto.v_PersonaId = entity.v_PersonaId;
            dto.i_TipoExamen = entity.i_TipoExamen;
            dto.v_NombreExamen = entity.v_NombreExamen;
            dto.d_FechaExamen = entity.d_FechaExamen;
            dto.v_Ocupacion = entity.v_Ocupacion;
            dto.v_EmpresaTrabajo = entity.v_EmpresaTrabajo;
            dto.v_Contrata = entity.v_Contrata;
            dto.v_ClinicaExamen = entity.v_ClinicaExamen;
            dto.v_Diagnosticos = entity.v_Diagnosticos;
            dto.v_Recomendaciones = entity.v_Recomendaciones;
            dto.v_Restricciones = entity.v_Restricciones;
            dto.i_Aptitud = entity.i_Aptitud;
            dto.v_MotivoObservacion = entity.v_MotivoObservacion;
            dto.d_FechaVigencia = entity.d_FechaVigencia;
            dto.d_FechaInsercion = entity.d_FechaInsercion;
            dto.i_UsuarioInsertaId = entity.i_UsuarioInsertaId;
            dto.d_FechaActualizacion = entity.d_FechaActualizacion;
            dto.i_UsuarioActualizaId = entity.i_UsuarioActualizaId;
            dto.i_EsEliminado = entity.i_EsEliminado;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="servicioDto"/> to an instance of <see cref="servicio"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<servicio> ToEntities(this IEnumerable<servicioDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="servicio"/> to an instance of <see cref="servicioDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<servicioDto> ToDTOs(this IEnumerable<servicio> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
