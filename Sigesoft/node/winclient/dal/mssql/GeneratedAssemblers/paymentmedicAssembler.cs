//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2024/12/04 - 17:55:55
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="paymentmedic"/> and <see cref="paymentmedicDto"/>.
    /// </summary>
    public static partial class paymentmedicAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="paymentmedicDto"/> converted from <see cref="paymentmedic"/>.</param>
        static partial void OnDTO(this paymentmedic entity, paymentmedicDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="paymentmedic"/> converted from <see cref="paymentmedicDto"/>.</param>
        static partial void OnEntity(this paymentmedicDto dto, paymentmedic entity);

        /// <summary>
        /// Converts this instance of <see cref="paymentmedicDto"/> to an instance of <see cref="paymentmedic"/>.
        /// </summary>
        /// <param name="dto"><see cref="paymentmedicDto"/> to convert.</param>
        public static paymentmedic ToEntity(this paymentmedicDto dto)
        {
            if (dto == null) return null;

            var entity = new paymentmedic();

            entity.i_PaymetId = dto.i_PaymetId;
            entity.i_CategoryId = dto.i_CategoryId;
            entity.i_TypePay = dto.i_TypePay;
            entity.i_UserId = dto.i_UserId;
            entity.r_PayPercentage = dto.r_PayPercentage;
            entity.r_QuotaMonth = dto.r_QuotaMonth;
            entity.i_IsDeleted = dto.i_IsDeleted;
            entity.i_InsertUserId = dto.i_InsertUserId;
            entity.d_InsertDate = dto.d_InsertDate;
            entity.i_UpdateUserId = dto.i_UpdateUserId;
            entity.d_UpdateDate = dto.d_UpdateDate;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="paymentmedic"/> to an instance of <see cref="paymentmedicDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="paymentmedic"/> to convert.</param>
        public static paymentmedicDto ToDTO(this paymentmedic entity)
        {
            if (entity == null) return null;

            var dto = new paymentmedicDto();

            dto.i_PaymetId = entity.i_PaymetId;
            dto.i_CategoryId = entity.i_CategoryId;
            dto.i_TypePay = entity.i_TypePay;
            dto.i_UserId = entity.i_UserId;
            dto.r_PayPercentage = entity.r_PayPercentage;
            dto.r_QuotaMonth = entity.r_QuotaMonth;
            dto.i_IsDeleted = entity.i_IsDeleted;
            dto.i_InsertUserId = entity.i_InsertUserId;
            dto.d_InsertDate = entity.d_InsertDate;
            dto.i_UpdateUserId = entity.i_UpdateUserId;
            dto.d_UpdateDate = entity.d_UpdateDate;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="paymentmedicDto"/> to an instance of <see cref="paymentmedic"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<paymentmedic> ToEntities(this IEnumerable<paymentmedicDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="paymentmedic"/> to an instance of <see cref="paymentmedicDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<paymentmedicDto> ToDTOs(this IEnumerable<paymentmedic> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
